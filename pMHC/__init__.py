import os
import logging

PACKAGE_NAME = "pMHC"

logger = logging.getLogger(__name__)

SEP = os.path.sep

FLANK_LEN = 15
MIN_PEPTIDE_LEN = 7
MAX_PEPTIDE_LEN = 15

POSITIVE_THRESHOLD = 0.5

TQDM_DISABLE = False

# Constants for the 3 dataset splits
SPLIT_TRAIN = 0
SPLIT_VAL = 1
SPLIT_TEST = 2
SPLIT_VAL_PROTEINS = 3
SPLIT_TEST_PROTEINS = 4
SPLIT_VAL_MHC_ALLELES = 5
SPLIT_TEST_MHC_ALLELES = 6
SPLIT_NAMES = {SPLIT_TRAIN: "train", SPLIT_VAL: "val", SPLIT_TEST: "test",
               SPLIT_VAL_PROTEINS: "val-prot", SPLIT_TEST_PROTEINS: "test-prot",
               SPLIT_VAL_MHC_ALLELES: "val-mhc", SPLIT_TEST_MHC_ALLELES: "test-mhc"}
SPLITS = [SPLIT_TRAIN, SPLIT_VAL, SPLIT_TEST,
          SPLIT_VAL_PROTEINS, SPLIT_TEST_PROTEINS, SPLIT_VAL_MHC_ALLELES, SPLIT_TEST_MHC_ALLELES]

SPLIT_OBS_TARGETS = [0.7, None, None, 0.05, 0.05, 0.1, 0.1]
SPLIT_TOLERANCE_MHC = 0.2
SPLIT_TOLERANCE_PROTEIN = 0.1
SPLIT_MHC_ALLELES_VAL_FILENAME = ""
SPLIT_MHC_ALLELES_TEST_FILENAME = ""
SPLIT_PROTEINS_VAL_FILENAME = ""
SPLIT_PROTEINS_TEST_FILENAME = ""


# Constants for the input types
INPUT_PEPTIDE = 0
INPUT_CONTEXT = 1

# Constants for the MHC allele representation
MHC_PSEUDO = 0
MHC_FULL = 1

# Definition of the token types
TT_MHC = 0
TT_N_FLANK = 1
TT_PEPTIDE = 2
TT_C_FLANK = 3
TT_NAMES = {TT_MHC: "MHC", TT_N_FLANK: "N-flank", TT_PEPTIDE: "peptide", TT_C_FLANK: "C-flank"}

# Model modes
VIEW_SA = 0
VIEW_SAMA = 1
VIEW_DECONV = 2
VIEW_NAMES = {VIEW_SA: "SA", VIEW_SAMA: "SAMA", VIEW_DECONV: "Deconv"}
VIEWS = [VIEW_SA, VIEW_SAMA, VIEW_DECONV]

# Folders
PROJECT_FOLDER = ""
CODE_FOLDER = ""
DATA_FOLDER = ""
INPUT_FOLDER = ""
OUTPUT_FOLDER = ""

# Filenames
VOCAB_FILENAME = ""

# SAMPLE files
SAMPLE_INPUT_FILENAME = ""

# PEPTIDE files
PEPTIDE_INPUT_FILENAME = ""

# MHC files
MHC_DATA_PSEUDO_FILENAME = ""
MHC_DATA_A_FILENAME = ""
MHC_DATA_B_FILENAME = ""
MHC_DATA_C_FILENAME = ""
MHC_INPUT_FILENAME = ""

# Protein files
PROTEIN_DATA_UNIPROT_FILENAME = ""
PROTEIN_DATA_ENSEMBL_FILENAME = ""
PROTEIN_INPUT_FILENAME = ""

# Observation files
OBSERVATION_INPUT_FILENAME = ""
OBSERVATION_PERMUTATION_FILENAME = ""
OBSERVATION_PERMUTATION = []

# Decoy files
DECOY_INPUT_FILENAME_PREFIX = ""

EDI_DATA_SAMPLES_FILENAME = ""
EDI_DATA_OBSERVATIONS_FILENAME = ""
EDI_DATA_PROCESSED_FILENAME = ""
EDI_INPUT_FILENAME = ""

ATLAS_DATA_SAMPLES_FILENAME = ""
ATLAS_DATA_PEPTIDES_FILENAME = ""
ATLAS_DATA_DONORS_FILENAME = ""
ATLAS_DATA_PROTEINS_FILENAME = ""
ATLAS_DATA_PROCESSED_FILENAME = ""
ATLAS_INPUT_FILENAME = ""

IEDB_DATA_FILENAME = ""
IEDB_PROCESSED_FILENAME = ""
IEDB_INPUT_FILENAME = ""

PARALOGUE_DATA_HGNC = ""
PARALOGUE_DATA_UNIPROT_MAPPING = ""
PARALOGUE_DATA_UNIPROT_PROTEIN = ""
PARALOGUE_DATA_ENSEMBL_MAPPING = ""
PARALOGUE_DATA_ENSEMBL_PROTEIN = ""
PARALOGUE_DATA_MAIN = ""

VALIDATION_PERFORMANCE_FILENAME = ""
TEST_PERFORMANCE_FILENAME = ""

BENCHMARK_SA = ""
BENCHMARK_MA = ""

SHAP_ARRAY_FLANK_LEN = 15
SHAP_ARRAY_N_FLANK_STD = None
SHAP_ARRAY_C_FLANK_STD = None
SHAP_ARRAY_PEPTIDE_LEN = 9
SHAP_ARRAY_MHC_LEN = 34
SHAP_ARRAY_MHC_STD = None


def set_paths(project_folder):
    global PROJECT_FOLDER, CODE_FOLDER, DATA_FOLDER, INPUT_FOLDER, OUTPUT_FOLDER, \
        VOCAB_FILENAME, \
        SAMPLE_INPUT_FILENAME, PEPTIDE_INPUT_FILENAME, \
        MHC_DATA_PSEUDO_FILENAME, MHC_DATA_A_FILENAME, MHC_DATA_B_FILENAME, MHC_DATA_C_FILENAME, MHC_INPUT_FILENAME, \
        PROTEIN_DATA_UNIPROT_FILENAME, PROTEIN_DATA_ENSEMBL_FILENAME, PROTEIN_INPUT_FILENAME, \
        OBSERVATION_INPUT_FILENAME, OBSERVATION_PERMUTATION_FILENAME, DECOY_INPUT_FILENAME_PREFIX, \
        EDI_DATA_SAMPLES_FILENAME, EDI_DATA_OBSERVATIONS_FILENAME, EDI_DATA_PROCESSED_FILENAME, \
        ATLAS_DATA_SAMPLES_FILENAME, ATLAS_DATA_PEPTIDES_FILENAME, ATLAS_DATA_DONORS_FILENAME, \
        ATLAS_DATA_PROTEINS_FILENAME, ATLAS_DATA_PROCESSED_FILENAME, \
        IEDB_DATA_FILENAME, IEDB_PROCESSED_FILENAME, \
        PARALOGUE_DATA_HGNC, PARALOGUE_DATA_UNIPROT_MAPPING, PARALOGUE_DATA_UNIPROT_PROTEIN, \
        PARALOGUE_DATA_ENSEMBL_MAPPING, PARALOGUE_DATA_ENSEMBL_PROTEIN, PARALOGUE_DATA_MAIN, \
        BENCHMARK_SA, BENCHMARK_MA, \
        SPLIT_MHC_ALLELES_VAL_FILENAME, SPLIT_MHC_ALLELES_TEST_FILENAME, \
        SPLIT_PROTEINS_VAL_FILENAME, SPLIT_PROTEINS_TEST_FILENAME, \
        VALIDATION_PERFORMANCE_FILENAME, TEST_PERFORMANCE_FILENAME

    print(f"Update project folder to: {project_folder}")

    PROJECT_FOLDER = project_folder
    CODE_FOLDER = f"{PROJECT_FOLDER}{SEP}epitope"
    DATA_FOLDER = f"{PROJECT_FOLDER}{SEP}data"
    INPUT_FOLDER = f"{PROJECT_FOLDER}{SEP}input"
    OUTPUT_FOLDER = f"{PROJECT_FOLDER}{SEP}output"

    VOCAB_FILENAME = f"{CODE_FOLDER}{SEP}vocab.json"

    SAMPLE_INPUT_FILENAME = f"{INPUT_FOLDER}{SEP}samples.csv"
    PEPTIDE_INPUT_FILENAME = f"{INPUT_FOLDER}{SEP}peptides.csv"

    # model performance
    VALIDATION_PERFORMANCE_FILENAME = f"{OUTPUT_FOLDER}{SEP}performance{SEP}validation_set.csv"
    TEST_PERFORMANCE_FILENAME = f"{OUTPUT_FOLDER}{SEP}performance{SEP}test_set.csv"

    # split definitions
    SPLIT_MHC_ALLELES_VAL_FILENAME = f"{INPUT_FOLDER}{SEP}splits{SEP}mhc-allele-groups_val-mhc.txt"
    SPLIT_MHC_ALLELES_TEST_FILENAME = f"{INPUT_FOLDER}{SEP}splits{SEP}mhc-allele-groups_test-mhc.txt"
    SPLIT_PROTEINS_VAL_FILENAME = f"{INPUT_FOLDER}{SEP}splits{SEP}observations_val-prot.txt"
    SPLIT_PROTEINS_TEST_FILENAME = f"{INPUT_FOLDER}{SEP}splits{SEP}observations_test-prot.txt"

    # Start mhc allele data

    MHC_DATA_PSEUDO_FILENAME = f"{DATA_FOLDER}{SEP}MHCs{SEP}MHC_pseudo.dat"
    MHC_DATA_A_FILENAME = f"{DATA_FOLDER}{SEP}MHCs{SEP}A_prot.fasta"
    MHC_DATA_B_FILENAME = f"{DATA_FOLDER}{SEP}MHCs{SEP}B_prot.fasta"
    MHC_DATA_C_FILENAME = f"{DATA_FOLDER}{SEP}MHCs{SEP}C_prot.fasta"
    MHC_INPUT_FILENAME = f"{INPUT_FOLDER}{SEP}mhc_alleles.csv"

    # Start protein data

    PROTEIN_DATA_UNIPROT_FILENAME = f"{DATA_FOLDER}{SEP}proteins{SEP}uniprot-proteome_UP000005640.fasta"
    PROTEIN_DATA_ENSEMBL_FILENAME = f"{DATA_FOLDER}{SEP}proteins{SEP}2019-04-30-Homo_sapiens_GRCh38_biomart_v94.fasta"
    PROTEIN_INPUT_FILENAME = f"{INPUT_FOLDER}{SEP}proteins.csv"

    # Start observation data
    OBSERVATION_INPUT_FILENAME = f"{INPUT_FOLDER}{SEP}observations.csv"
    OBSERVATION_PERMUTATION_FILENAME = f"{INPUT_FOLDER}{SEP}observation_permutation.txt"
    DECOY_INPUT_FILENAME_PREFIX = f"{INPUT_FOLDER}{SEP}decoys{SEP}decoys"

    EDI_DATA_SAMPLES_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}edi{SEP}hla-peptides-meta-data_changed.tsv"
    EDI_DATA_OBSERVATIONS_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}edi{SEP}hla-peptides.csv"
    EDI_DATA_PROCESSED_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}edi{SEP}edi_processed.csv"

    ATLAS_DATA_SAMPLES_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}atlas{SEP}HLA_sample_hits.tsv"
    ATLAS_DATA_PEPTIDES_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}atlas{SEP}HLA_peptides.tsv"
    ATLAS_DATA_DONORS_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}atlas{SEP}HLA_donors.tsv"
    ATLAS_DATA_PROTEINS_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}atlas{SEP}HLA_protein_map.tsv"

    IEDB_DATA_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}iedb{SEP}mhc_ligand_full.csv"
    IEDB_PROCESSED_FILENAME = f"{DATA_FOLDER}{SEP}observations{SEP}iedb{SEP}iedb_processed.tsv"

    PARALOGUE_DATA_HGNC = f"{DATA_FOLDER}{SEP}mappings{SEP}HGNC.tsv"
    PARALOGUE_DATA_UNIPROT_MAPPING = f"{DATA_FOLDER}{SEP}mappings{SEP}HUMAN_9606_idmapping_selected.tab"
    PARALOGUE_DATA_UNIPROT_PROTEIN = PROTEIN_DATA_UNIPROT_FILENAME
    PARALOGUE_DATA_ENSEMBL_MAPPING = f"{DATA_FOLDER}{SEP}mappings{SEP}ENSG_to_HGNC.csv"
    PARALOGUE_DATA_ENSEMBL_PROTEIN = PROTEIN_DATA_ENSEMBL_FILENAME
    PARALOGUE_DATA_MAIN = f"{DATA_FOLDER}{SEP}mappings{SEP}Homo_sapiens.GRCh38.paralogues.tsv"

    BENCHMARK_SA = f"{DATA_FOLDER}{SEP}benchmark{SEP}Data_S2.csv"
    BENCHMARK_MA = f"{DATA_FOLDER}{SEP}benchmark{SEP}Data_S1.csv"

    load_permutation(OBSERVATION_PERMUTATION_FILENAME)


def set_tqdm_disabled(tqdm_disabled):
    global TQDM_DISABLE
    TQDM_DISABLE = tqdm_disabled


def load_permutation(observation_permutation_filename):
    global OBSERVATION_PERMUTATION

    print("Load permutation")
    with open(observation_permutation_filename, 'r') as file:
        perm = file.read()
    OBSERVATION_PERMUTATION = [int(x) for x in perm.split("; ")]


set_tqdm_disabled(False)
